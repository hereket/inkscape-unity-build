# Dependencies are managed in the Dockerfile in the inkscape-ci-docker
# Git repository. Change them there, wait a bit, and then we'll use
# the new ones here in these builds.
image: ${IMAGE}

workflow:
  rules:
    - when: always

stages:
  - build
  - test
  - coverage
  - deploy
variables:
  GIT_DEPTH: "1"
  GIT_SUBMODULE_STRATEGY: recursive
  IMAGE: registry.gitlab.com/inkscape/inkscape-ci-docker/extensions


.artifacts:
  artifacts:
    name: "coverage"
    when: always
    paths:
      - .coverage-*
      - htmlcov

codestyle:ci:
  stage: test
  script:
    - source /root/pyenv-init
    - pyenv shell 3.11.0
    - pip install ruff
    - ruff format --check --diff

archive:
  stage: test
  script:
    - cd ..
    - apt-get update && apt-get install zip -y
    - zip -r extensions.zip $CI_PROJECT_NAME -x $CI_PROJECT_NAME/tests/\* -x $CI_PROJECT_NAME/.git/\*
    - mv extensions.zip $CI_PROJECT_NAME/extensions.zip
  artifacts:
    paths:
      - extensions.zip


test:linux:
  stage: test
  extends:
    - .artifacts
  parallel:
    matrix:
      - PYTHON_VER: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
  script:
    - source /root/pyenv-init
    - pyenv shell ${PYTHON_VER}.0
    - tox -e py${PYTHON_VER//.}-normal-linux


test:windows:
  stage: test
  extends:
    - .artifacts
  tags:
    - saas-windows-medium-amd64
  parallel:
    matrix:
      - PYTHON_VER: [ "3.11", "3.12" ]
  script:
    - choco install python --version "$Env:PYTHON_VER.0" -y -f --no-progress
    - $env:PATH += ";C:\\PYTHON$Env:PYTHON_VER.Replace('.', '')\\;C:\\PYTHON$Env:PYTHON_VER.Replace('.', '')\\Scripts"
    - $env:PYTHON_KEYRING_BACKEND = "keyring.backends.null.Keyring"
    - Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
    - refreshenv
    - python -m pip install --upgrade pip
    - python -m pip install --upgrade 'tox<4.0' poetry tox-poetry
    - tox -e $("py"+$Env:PYTHON_VER.Replace(".", "")+"-normal-win")
  allow_failure: true # The windows run is less reliable than the Linux test runs.

test:coverage:
  stage: coverage
  script:
    - source /root/pyenv-init
    - pyenv shell 3.11.0
    - pip install coverage
    - ls -la | grep coverage
    - echo "     C:\GitLab-Runner\builds\*\*\$CI_PROJECT_NAME" >> .coveragerc
    - coverage3 combine .coverage-*
    - coverage3 report -m --precision=2
    - coverage3 html --ignore-errors --title="Coverage for Inkscape Extensions (${CI_COMMIT_REF_NAME} branch)"
    - echo -e "\n\n"
      "Coverage report successfully created; you can access the full HTML report at\n"
      "  https://${CI_PROJECT_NAMESPACE}.gitlab.io/-/${CI_PROJECT_NAME}/-/jobs/${CI_JOB_ID}/artifacts/htmlcov/index.html"
      "\n\n"
    - pip install pylint==2.17.4
    - python3 tests/add_pylint.py htmlcov/index.html
    - pip install anybadge
    - pylintscore=$(grep -Eo "[0-9]+.[0-9]+</td></tr></tfoot>" htmlcov/index.html | grep -Eo "[0-9]+.[0-9]+")
    - anybadge -l pylint -v $pylintscore -f htmlcov/pylint.svg 6=red 8=orange 9=yellow 10=green
  dependencies:
    - "test:linux: [3.8]"
    - "test:linux: [3.9]"
    - "test:linux: [3.10]"
    - "test:linux: [3.11]"
    - "test:linux: [3.12]"
    - "test:windows: [3.11]"
    - "test:windows: [3.12]"
  when: always
  coverage: '/TOTAL.+?(\d+.\d+%)/'
  artifacts:
    paths:
      - htmlcov/


mypy:
  stage: test
  when: always
  script:
    - source /root/pyenv-init
    - pyenv shell 3.11.0
    - pip install mypy
    - mypy inkex --ignore-missing-imports

sphinx:
  stage: test
  when: always
  script:
    - source /root/pyenv-init
    - pyenv shell 3.11.0
    - poetry install
    - poetry run sphinx-apidoc -e -P -o docs/source/ inkex */deprecated.py
    - cd docs
    - poetry run make html
    - echo -e "\n\n"
      "Documentation for inkex module successfully created; you can access the HTML version at\n"
      "  https://${CI_PROJECT_NAMESPACE}.gitlab.io/-/${CI_PROJECT_NAME}/-/jobs/${CI_JOB_ID}/artifacts/build/html/index.html"
      "\n\n"
  artifacts:
    paths:
      - build/html/

pages:
  stage: deploy
  only:
    - master@inkscape/extensions
  when: always
  script:
    - mkdir -p public
    - if test -d htmlcov/; then cp -r htmlcov/ public/coverage/; fi
    - if test -d build/html/; then cp -r build/html/ public/documentation/; fi
    - source /root/pyenv-init
    - pyenv shell 3.11.0
    - bash docs/poetry.sh > public/python-dependencies.txt # Flattened list of all dependencies
  artifacts:
    paths:
      - public/
